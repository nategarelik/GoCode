apiVersion: apps/v1
kind: Deployment
metadata:
  name: claudecodeui-blue
  namespace: claudecodeui
  labels:
    app.kubernetes.io/name: claudecodeui
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "blue"
    deployment.claudecodeui.io/slot: blue
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: claudecodeui
      app.kubernetes.io/component: backend
      deployment.claudecodeui.io/slot: blue
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claudecodeui
        app.kubernetes.io/component: backend
        deployment.claudecodeui.io/slot: blue
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claudecodeui
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: claudecodeui
        image: claudecodeui:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3008
          protocol: TCP
        - name: websocket
          containerPort: 3009
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: PORT
        - name: VITE_PORT
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: VITE_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: SESSION_SECRET
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: DB_PASSWORD
        - name: DEPLOYMENT_SLOT
          value: "blue"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: claudecodeui-config
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: claudecodeui-data
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
      - name: claudecodeui-registry
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - claudecodeui
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claudecodeui-green
  namespace: claudecodeui
  labels:
    app.kubernetes.io/name: claudecodeui
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "green"
    deployment.claudecodeui.io/slot: green
spec:
  replicas: 0  # Initially scaled to 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: claudecodeui
      app.kubernetes.io/component: backend
      deployment.claudecodeui.io/slot: green
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claudecodeui
        app.kubernetes.io/component: backend
        deployment.claudecodeui.io/slot: green
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claudecodeui
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: claudecodeui
        image: claudecodeui:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3008
          protocol: TCP
        - name: websocket
          containerPort: 3009
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: PORT
        - name: VITE_PORT
          valueFrom:
            configMapKeyRef:
              name: claudecodeui-config
              key: VITE_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: SESSION_SECRET
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: claudecodeui-secrets
              key: DB_PASSWORD
        - name: DEPLOYMENT_SLOT
          value: "green"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: claudecodeui-config
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: claudecodeui-data
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
      - name: claudecodeui-registry
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - claudecodeui
              topologyKey: kubernetes.io/hostname