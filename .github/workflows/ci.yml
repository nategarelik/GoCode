name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  NODE_VERSION: '20'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run ESLint
        run: |
          if [ -f "package.json" ] && grep -q "\"lint\":" package.json; then
            npm run lint
          else
            echo "Warning: No lint script found in package.json"
            exit 1
          fi
      
      - name: Check formatting
        run: |
          npx prettier --check "src/**/*.{js,jsx,ts,tsx,css}" || {
            echo "Error: Code formatting issues found. Run 'npx prettier --write src/**/*.{js,jsx,ts,tsx,css}' to fix."
            exit 1
          }

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test
          else
            echo "Warning: No test script found in package.json"
            exit 1
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Build application
        run: npm run build
      
      - name: Check bundle size
        run: |
          echo "Build size report:"
          du -sh dist/
          find dist -name "*.js" -o -name "*.css" | xargs ls -lh
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --production || true
      
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ""
          head: ""
          extra_args: --only-verified